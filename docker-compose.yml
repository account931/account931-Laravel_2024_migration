version: '3.7'

services:
  # PHP + Apache service,   {my_larav_931_app}  is the container name (container that contains php, apache). Use this name to log to container, regardless what {container_name} parametr makes
  # http://localhost:8000
  my_larav_931_app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: laravel_app   #Uniqueness conflict, but since it is used in CI Docker testing, let it be
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html
    networks:
      - laravel_network
    depends_on:
      - my_sql_db_container
      - my_sql_db_testing_container
      

  # MySQL service container (production/development)-----------------------------------------
  my_sql_db_container:
    image: mysql:5.7
    container_name: mysql_db   #Uniqueness conflict
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_2024_migration
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel_network
      
  #MySQL service container (for running PhpUnit tests) (so far, it needed for testing Docker image in Github CI/CD only(job 3 in workflows/ci.yml)) -----------------------------------------
  my_sql_db_testing_container:
    image: mysql:5.7
    container_name: mysql_db_testing  #Uniqueness conflict
    ports:
      - "3307:3306"  # Note different host port
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_2024_migration_testing
      MYSQL_USER: user_test
      MYSQL_PASSWORD: password_test
    volumes:
       - mysql_test_data:/var/lib/mysql
    networks:
      - laravel_network


      

  # phpMyAdmin service  http://localhost:8080 ---------------------------------------------------
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin  #Uniqueness conflict
    environment:
      PMA_HOST: my_sql_db_container
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8080:80"
    networks:
      - laravel_network

  # npm (Vue.js) Service container-----------------------
  #npm:
    #image: node:16-alpine
    #container_name: vue_npm
    #working_dir: /var/www/html
    #volumes:
    #  - .:/var/www/html
    #networks:
    #  - laravel_network
    #entrypoint: ["npm", "run", "dev"]



networks:
  laravel_network:
    driver: bridge

volumes:
  mysql_data:
  mysql_test_data:

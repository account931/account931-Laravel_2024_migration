#for CD deploy to render.com
services:
  - type: web
    name: laravel-app
    env: docker
    dockerfilePath: docker/Dockerfile
    plan: starter
    startCommand: sh -c "php artisan migrate --force && apache2-foreground"
    deployCommand: |
      echo "Running migrations before deployment"
      php artisan migrate --force
    #deploy:
      #commands:
        #- php artisan migrate --force
    
    envVars:  # Vars here do not matter as they are set in render dashboar 
      - key: APP_ENV
        value: production
      - key: APP_KEY
        generateValue: true
      - key: APP_DEBUG
        value: false
      - key: DB_CONNECTION
        value: mysql
      - key: DB_HOST
        value: your-db-host.render.com
      - key: DB_PORT
        value: 3306
      - key: DB_DATABASE
        value: your_database   # value is set in render dashboard and  will take precedence(to be more important )
      - key: DB_USERNAME
        value: your_username
      - key: DB_PASSWORD
        value: your_password
      - key: CACHE_DRIVER
        value: file
      - key: SESSION_DRIVER
        value: file
      - key: QUEUE_CONNECTION
        value: sync

        
 jobs:
  - name: laravel-migrate
    env: docker
    dockerfilePath: docker/Dockerfile
    startCommand: php artisan migrate --force
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_KEY
        fromSecret: APP_KEY
      - key: DB_CONNECTION
        fromSecret: DB_CONNECTION
      - key: DB_HOST
        fromSecret: DB_HOST
      - key: DB_PORT
        fromSecret: DB_PORT
      - key: DB_DATABASE
        fromSecret: DB_DATABASE
      - key: DB_USERNAME
        fromSecret: DB_USERNAME
      - key: DB_PASSWORD
        fromSecret: DB_PASSWORD